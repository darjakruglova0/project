"use strict";

const numberOfFilms = +prompt('Сколько фильмов вы уже посмотрели?','');
/*console.log(numberOfFilms);
*/
const personalMovieDB ={
     count:numberOfFilms,
     movies:{},
     actors:{},
     genres:[],
     privat:false
};
  let i = 0;
  while (i < 2) { 
    i++;
    const a = prompt('Один из последних просмотренных фильмов?',''),
       b = prompt('Насколько оцените его?','');
       if ( a!=null && b!=null && a.length<50 && b.length<50 && a!='' & b!=''){
        personalMovieDB.movies[a]= b;
        console.log('done');
           }
else{
  console.log('err');
i--;
}
   
  }
  console.log(personalMovieDB);



// Место для первой задачи
function sayHello(nameMan) {
return 'Привет + ${nameMan}';
}
sayHello('Антон');

/*2) Создайте функцию, которая принимает в себя 1 аргумент в виде целого числа и возвращает 
массив из трех чисел: одно на 1 меньше, сам аргумент, и число на 1 больше.
Пример: вызов функции returnNeighboringNumbers(5) возвращает массив в виде [4, 5, 6].*/

// Место для второй задачи



function returnNeighboringNumbers(IntegNumber) {
  let numbermin=IntegNumber-1;
  let numbermax=IntegNumber+1;

return [numbermin,IntegNumber,numbermax];
}
console.log(returnNeighboringNumbers(5));


function returnNeighboringNumbers(num) {
  return [num - 1, num, num + 1];
}

returnNeighboringNumbers(5);

/*3) Создайте функцию, которая будет принимать в себя 2 аргумента, оба числа. 
Первое число - это база, второе число - это сколько раз нужно будет повторить это число в прогрессии.
 (Смотри пример ниже).
 Функция должна возвращать строку (или число в особых случаях, о которых ниже),
  где эти числа идут по порядку, разделенные тремя дефисами "---". 
 После последнего числа их не должно быть.
Если второй аргумент не является числом, равен или меньше нуля - то возвращать просто первый аргумент.
 (Проверяем через оператор typeof)

Примеры:

Вызов функции getMathResult(5, 3) даст ответ 5---10---15

Вызов функции getMathResult(3, 10) даст ответ 3---6---9---12---15---18---21---24---27---30

Вызов функции getMathResult(10, 5) даст ответ 10---20---30---40---50

Вызов функции getMathResult(10, '5') даст ответ 10

Вызов функции getMathResult(10, 0) даст ответ 10

Вызов функции getMathResult(20, -5) даст ответ 20

Эта задача уже ближе к реальности, когда вам нужно учитывать и тип данных у аргументов, 
проверять их и продумывать логику работы внутри. 
Обратите внимание на прогрессию, она рассчитывается по простой формуле умножения. 
Если первый аргумент 5, а второй 3, то число повторяется 3 раза, каждый раз увеличиваясь на само себя. 
Это базовая математика, которая и нужна для работы в 95% случае на фронтенде. */
// Место для третьей задачи
function getMathResult(num1,num2) {
  /*return num *(num+1)/2;*/
let res='';
if ( typeof num2!=='number' || num2<=0){
return num1;
     }

  for(let i=1;i<=num2;i++){
if(i===num2){
  res+=num1*i;
}
else{
  res+=num1*i+'---';
}
  }
return res;
}
getMathResult(5,3);


/* Задание на урок:
1) Первую часть задания повторить по уроку
2) Создать функцию showMyDB, которая будет проверять свойство privat. Если стоит в позиции
false - выводит в консоль главный объект программы
3) Создать функцию writeYourGenres в которой пользователь будет 3 раза отвечать на вопрос 
"Ваш любимый жанр под номером ${номер по порядку}". Каждый ответ записывается в массив данных
genres
P.S. Функции вызывать не обязательно */


